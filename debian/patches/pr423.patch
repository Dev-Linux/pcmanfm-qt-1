From 8dbd81205fbdf8d7f0accb8412bd0d31efa44000 Mon Sep 17 00:00:00 2001
From: Tsu Jan <tsujan2000@gmail.com>
Date: Mon, 12 Dec 2016 19:19:38 +0330
Subject: [PATCH] Wallpaper Slide Show

Fixes https://github.com/lxde/lxqt/issues/608.

The new options are added to Desktop Preferences. The slide-show interval is between 5min and 24h,55min. An option is also added for randomizing the slide show.
---
 pcmanfm/desktop-preferences.ui       | 120 ++++++++++++++++++++++++++++++++++-
 pcmanfm/desktoppreferencesdialog.cpp |  31 +++++++++
 pcmanfm/desktoppreferencesdialog.h   |   1 +
 pcmanfm/desktopwindow.cpp            |  94 +++++++++++++++++++++++++++
 pcmanfm/desktopwindow.h              |   9 +++
 pcmanfm/settings.cpp                 |  10 +++
 pcmanfm/settings.h                   |  27 ++++++++
 7 files changed, 291 insertions(+), 1 deletion(-)

diff --git a/pcmanfm/desktop-preferences.ui b/pcmanfm/desktop-preferences.ui
index 94b90f6..9aaaecc 100644
--- a/pcmanfm/desktop-preferences.ui
+++ b/pcmanfm/desktop-preferences.ui
@@ -7,7 +7,7 @@
     <x>0</x>
     <y>0</y>
     <width>534</width>
-    <height>434</height>
+    <height>500</height>
    </rect>
   </property>
   <property name="windowTitle">
@@ -114,6 +114,124 @@
         </widget>
        </item>
        <item>
+        <widget class="QGroupBox" name="slideShow">
+         <property name="title">
+          <string>Slide Show</string>
+         </property>
+         <property name="checkable">
+          <bool>true</bool>
+         </property>
+         <property name="checked">
+          <bool>false</bool>
+         </property>
+         <layout class="QGridLayout" name="gridLayout_4">
+          <item row="0" column="0" colspan="7">
+           <widget class="QLabel" name="label_10">
+            <property name="text">
+             <string>Wallpaper image folder:</string>
+            </property>
+           </widget>
+          </item>
+          <item row="1" column="6">
+           <widget class="QPushButton" name="folderBrowse">
+            <property name="text">
+             <string>Browse</string>
+            </property>
+           </widget>
+          </item>
+          <item row="2" column="2">
+           <widget class="QSpinBox" name="hours">
+            <property name="suffix">
+             <string> hour(s)</string>
+            </property>
+            <property name="maximum">
+             <number>24</number>
+            </property>
+           </widget>
+          </item>
+          <item row="2" column="3">
+           <widget class="QLabel" name="label_12">
+            <property name="text">
+             <string>and</string>
+            </property>
+            <property name="alignment">
+             <set>Qt::AlignCenter</set>
+            </property>
+            <property name="margin">
+             <number>5</number>
+            </property>
+           </widget>
+          </item>
+          <item row="2" column="0">
+           <widget class="QLabel" name="label_11">
+            <property name="toolTip">
+             <string>Intervals less than 5min will be ignored</string>
+            </property>
+            <property name="text">
+             <string>Interval:</string>
+            </property>
+           </widget>
+          </item>
+          <item row="2" column="4">
+           <widget class="QSpinBox" name="minutes">
+            <property name="suffix">
+             <string> minute(s)</string>
+            </property>
+            <property name="maximum">
+             <number>55</number>
+            </property>
+            <property name="singleStep">
+             <number>5</number>
+            </property>
+           </widget>
+          </item>
+          <item row="2" column="5">
+           <spacer name="horizontalSpacer_2">
+            <property name="orientation">
+             <enum>Qt::Horizontal</enum>
+            </property>
+            <property name="sizeHint" stdset="0">
+             <size>
+              <width>10</width>
+              <height>5</height>
+             </size>
+            </property>
+           </spacer>
+          </item>
+          <item row="1" column="0" colspan="6">
+           <widget class="QLineEdit" name="imageFolder">
+            <property name="placeholderText">
+             <string>Wallpaper folder</string>
+            </property>
+           </widget>
+          </item>
+          <item row="2" column="1">
+           <spacer name="horizontalSpacer_3">
+            <property name="orientation">
+             <enum>Qt::Horizontal</enum>
+            </property>
+            <property name="sizeType">
+             <enum>QSizePolicy::Minimum</enum>
+            </property>
+            <property name="sizeHint" stdset="0">
+             <size>
+              <width>5</width>
+              <height>5</height>
+             </size>
+            </property>
+           </spacer>
+          </item>
+          <item row="3" column="0" colspan="6">
+           <widget class="QCheckBox" name="randomize">
+            <property name="text">
+             <string>Randomize the slide show</string>
+            </property>
+           </widget>
+          </item>
+         </layout>
+        </widget>
+       </item>
+       <item>
         <widget class="QGroupBox" name="groupBox_5">
          <property name="title">
           <string>Icons</string>
diff --git a/pcmanfm/desktoppreferencesdialog.cpp b/pcmanfm/desktoppreferencesdialog.cpp
index 50bb451..092bd34 100644
--- a/pcmanfm/desktoppreferencesdialog.cpp
+++ b/pcmanfm/desktoppreferencesdialog.cpp
@@ -84,6 +84,14 @@ DesktopPreferencesDialog::DesktopPreferencesDialog(QWidget* parent, Qt::WindowFl
   qDebug("wallpaper: %s", settings.wallpaper().toUtf8().data());
   ui.imageFile->setText(settings.wallpaper());
 
+  ui.slideShow->setChecked(settings.slideShowInterval() > 0);
+  ui.imageFolder->setText(settings.wallpaperDir());
+  int minutes = qMax(settings.slideShowInterval() / 60000, 5); // 5 min at least
+  ui.hours->setValue(minutes / 60);
+  ui.minutes->setValue(minutes % 60);
+  ui.randomize->setChecked(settings.wallpaperRandomize());
+  connect(ui.folderBrowse, &QPushButton::clicked, this, &DesktopPreferencesDialog::onFolderBrowseClicked);
+
   for(int i = 0; i < G_N_ELEMENTS(iconSizes); ++i) {
     int size = iconSizes[i];
     ui.iconSize->addItem(QString("%1 x %1").arg(size), size);
@@ -145,12 +153,22 @@ void DesktopPreferencesDialog::applySettings()
   settings.setWallpaper(ui.imageFile->text());
   int mode = ui.wallpaperMode->itemData(ui.wallpaperMode->currentIndex()).toInt();
   settings.setWallpaperMode(mode);
+
+  settings.setWallpaperDir(ui.imageFolder->text());
+  int interval = 0;
+  if(ui.slideShow->isChecked())
+    interval = (ui.minutes->value() + 60 * ui.hours->value()) * 60000;
+  settings.setSlideShowInterval(interval);
+  settings.setWallpaperRandomize(ui.randomize->isChecked());
+
   settings.setDesktopIconSize(ui.iconSize->itemData(ui.iconSize->currentIndex()).toInt());
+
   settings.setDesktopFont(ui.font->font());
   settings.setDesktopBgColor(ui.backgroundColor->color());
   settings.setDesktopFgColor(ui.textColor->color());
   settings.setDesktopShadowColor(ui.shadowColor->color());
   settings.setShowWmMenu(ui.showWmMenu->isChecked());
+
   settings.setDesktopCellMargins(QSize(ui.hMargin->value(), ui.vMargin->value()));
 
   settings.save();
@@ -201,6 +219,19 @@ void DesktopPreferencesDialog::onBrowseClicked() {
   }
 }
 
+void DesktopPreferencesDialog::onFolderBrowseClicked() {
+  QFileDialog dlg;
+  dlg.setAcceptMode(QFileDialog::AcceptOpen);
+  dlg.setFileMode(QFileDialog::Directory);
+  dlg.setOption(QFileDialog::ShowDirsOnly);
+  dlg.setDirectory(QDir::home().path());
+  if(dlg.exec() == QDialog::Accepted) {
+    QString foldername;
+    foldername = dlg.selectedFiles().first();
+    ui.imageFolder->setText(foldername);
+  }
+}
+
 void DesktopPreferencesDialog::onBrowseDesktopFolderClicked()
 {
   QFileDialog dlg;
diff --git a/pcmanfm/desktoppreferencesdialog.h b/pcmanfm/desktoppreferencesdialog.h
index f3a0af4..31a4fb0 100644
--- a/pcmanfm/desktoppreferencesdialog.h
+++ b/pcmanfm/desktoppreferencesdialog.h
@@ -46,6 +46,7 @@ protected Q_SLOTS:
   void onApplyClicked();
   void onWallpaperModeChanged(int index);
   void onBrowseClicked();
+  void onFolderBrowseClicked();
   void onBrowseDesktopFolderClicked();
   void lockMargins(bool lock);
 
diff --git a/pcmanfm/desktopwindow.cpp b/pcmanfm/desktopwindow.cpp
index 2bbf880..7c8b9d6 100644
--- a/pcmanfm/desktopwindow.cpp
+++ b/pcmanfm/desktopwindow.cpp
@@ -30,6 +30,7 @@
 #include <QLayout>
 #include <QDebug>
 #include <QTimer>
+#include <QTime>
 #include <QSettings>
 #include <QStringBuilder>
 #include <QDir>
@@ -63,6 +64,9 @@ DesktopWindow::DesktopWindow(int screenNum):
   proxyModel_(NULL),
   model_(NULL),
   wallpaperMode_(WallpaperNone),
+  slideShowInterval_(0),
+  wallpaperTimer_(NULL),
+  wallpaperRandomize_(false),
   fileLauncher_(NULL),
   showWmMenu_(false),
   screenNum_(screenNum),
@@ -155,6 +159,9 @@ DesktopWindow::~DesktopWindow() {
   if(relayoutTimer_)
     delete relayoutTimer_;
 
+  if(wallpaperTimer_)
+    delete wallpaperTimer_;
+
   if(proxyModel_)
     delete proxyModel_;
 
@@ -212,6 +219,18 @@ void DesktopWindow::setWallpaperMode(WallpaperMode mode) {
   wallpaperMode_ = mode;
 }
 
+void DesktopWindow::setWallpaperDir(QString dirname) {
+  wallpaperDir_ = dirname;
+}
+
+void DesktopWindow::setSlideShowInterval(int interval) {
+  slideShowInterval_ = qMax(interval, 0);
+}
+
+void DesktopWindow::setWallpaperRandomize(bool randomize) {
+  wallpaperRandomize_ = randomize;
+}
+
 QImage DesktopWindow::loadWallpaperFile(QSize requiredSize) {
   // NOTE: for ease of programming, we only use the cache for the primary screen.
   bool useCache = (screenNum_ == -1 || screenNum_ == 0);
@@ -339,10 +358,66 @@ void DesktopWindow::updateWallpaper() {
   setPalette(palette);
 }
 
+bool DesktopWindow::pickWallpaper() {
+  if(slideShowInterval_ < 5 * 60000
+     || !QFileInfo(wallpaperDir_).isDir()) {
+    return false;
+  }
+
+  QList<QByteArray> formats = QImageReader::supportedImageFormats();
+  QStringList formatsFilters;
+  for (const QByteArray& format: formats)
+    formatsFilters << QString("*.") + format;
+  QDir dir(wallpaperDir_);
+  QStringList files = dir.entryList(formatsFilters,
+                                    QDir::Files | QDir::NoDotAndDotDot,
+                                    QDir::Name);
+  if(!files.isEmpty()) {
+     QString oldWallpaperFile = wallpaperFile_;
+     if(!wallpaperRandomize_) {
+       bool found = false;
+       for(int i = 0; i < files.size(); ++i) {
+         if(wallpaperFile_ == wallpaperDir_ + "/" + files.at(i)) {
+           wallpaperFile_ = wallpaperDir_ + "/" + (i + 1 < files.size()
+                                                   ? files.at(i+1) : files.at(0));
+           found = true;
+           break;
+         }
+       }
+       if(!found)
+         wallpaperFile_ = wallpaperDir_ + "/" + files.first();
+     }
+     else {
+       if(files.size() > 1) {
+         files.removeOne(wallpaperFile_);
+         // this is needed for the randomness, especially when choosing the first wallpaper
+         qsrand((uint)QTime::currentTime().msec());
+         int randomValue = qrand() % files.size();
+         wallpaperFile_ = wallpaperDir_ + "/" + files.at(randomValue);
+       }
+       else
+         wallpaperFile_ = wallpaperDir_ + "/" + files.first();
+     }
+
+     if (wallpaperFile_ != oldWallpaperFile)
+       return true;
+  }
+
+  return false;
+}
+
+void DesktopWindow::changeWallpaper() {
+  if(pickWallpaper())
+    updateWallpaper();
+}
+
 void DesktopWindow::updateFromSettings(Settings& settings) {
   setDesktopFolder();
   setWallpaperFile(settings.wallpaper());
   setWallpaperMode(settings.wallpaperMode());
+  setWallpaperDir(settings.wallpaperDir());
+  setSlideShowInterval(settings.slideShowInterval());
+  setWallpaperRandomize(settings.wallpaperRandomize());
   setFont(settings.desktopFont());
   setIconSize(Fm::FolderView::IconMode, QSize(settings.desktopIconSize(), settings.desktopIconSize()));
   setMargins(settings.desktopCellMargins());
@@ -352,8 +427,27 @@ void DesktopWindow::updateFromSettings(Settings& settings) {
   setBackground(settings.desktopBgColor());
   setShadow(settings.desktopShadowColor());
   showWmMenu_ = settings.showWmMenu();
+
+  if(slideShowInterval_ >= 5 * 60000 // no slide show with less than 5min
+     && QFileInfo(wallpaperDir_).isDir()) {
+    pickWallpaper();
+    if(!wallpaperTimer_) {
+      wallpaperTimer_ = new QTimer();
+      connect(wallpaperTimer_, &QTimer::timeout, this, &DesktopWindow::changeWallpaper);
+    }
+    else
+      wallpaperTimer_->stop(); // restart the timer after updating wallpaper
+  }
+  else if(wallpaperTimer_) {
+    delete wallpaperTimer_;
+    wallpaperTimer_ = NULL;
+  }
+
   updateWallpaper();
   update();
+
+  if(wallpaperTimer_)
+    wallpaperTimer_->start(slideShowInterval_);
 }
 
 void DesktopWindow::onFileClicked(int type, FmFileInfo* fileInfo) {
diff --git a/pcmanfm/desktopwindow.h b/pcmanfm/desktopwindow.h
index 1576245..c531879 100644
--- a/pcmanfm/desktopwindow.h
+++ b/pcmanfm/desktopwindow.h
@@ -63,9 +63,14 @@ Q_OBJECT
   void setDesktopFolder();
   void setWallpaperFile(QString filename);
   void setWallpaperMode(WallpaperMode mode = WallpaperStretch);
+  void setWallpaperDir(QString dirname);
+  void setSlideShowInterval(int interval);
+  void setWallpaperRandomize(bool randomize);
 
   // void setWallpaperAlpha(qreal alpha);
   void updateWallpaper();
+  bool pickWallpaper();
+  void changeWallpaper();
   void updateFromSettings(Settings& settings);
 
   void queueRelayout(int delay = 0);
@@ -131,6 +136,10 @@ protected Q_SLOTS:
   QColor shadowColor_;
   QString wallpaperFile_;
   WallpaperMode wallpaperMode_;
+  QString wallpaperDir_;
+  int slideShowInterval_;
+  QTimer* wallpaperTimer_;
+  bool wallpaperRandomize_;
   QPixmap wallpaperPixmap_;
   DesktopItemDelegate* delegate_;
   Launcher fileLauncher_;
diff --git a/pcmanfm/settings.cpp b/pcmanfm/settings.cpp
index d418a29..6d1745f 100644
--- a/pcmanfm/settings.cpp
+++ b/pcmanfm/settings.cpp
@@ -63,6 +63,9 @@ Settings::Settings():
   closeOnUnmount_(false),
   wallpaperMode_(0),
   wallpaper_(),
+  wallpaperDir_(),
+  slideShowInterval_(0),
+  wallpaperRandomize_(false),
   desktopBgColor_(),
   desktopFgColor_(),
   desktopShadowColor_(),
@@ -202,6 +205,10 @@ bool Settings::loadFile(QString filePath) {
   settings.beginGroup("Desktop");
   wallpaperMode_ = wallpaperModeFromString(settings.value("WallpaperMode").toString());
   wallpaper_ = settings.value("Wallpaper").toString();
+  wallpaperDir_ = settings.value("WallpaperDirectory").toString();
+  slideShowInterval_ = qMin(settings.value("SlideShowInterval", 0).toInt(),
+                            (24 * 60 + 55) * 60000); // the upper limit is 24h and 55min
+  wallpaperRandomize_ = settings.value("WallpaperRandomize").toBool();
   desktopBgColor_.setNamedColor(settings.value("BgColor", "#000000").toString());
   desktopFgColor_.setNamedColor(settings.value("FgColor", "#ffffff").toString());
   desktopShadowColor_.setNamedColor(settings.value("ShadowColor", "#000000").toString());
@@ -319,6 +326,9 @@ bool Settings::saveFile(QString filePath) {
   settings.beginGroup("Desktop");
   settings.setValue("WallpaperMode", wallpaperModeToString(wallpaperMode_));
   settings.setValue("Wallpaper", wallpaper_);
+  settings.setValue("WallpaperDirectory", wallpaperDir_);
+  settings.setValue("SlideShowInterval", slideShowInterval_);
+  settings.setValue("WallpaperRandomize", wallpaperRandomize_);
   settings.setValue("BgColor", desktopBgColor_.name());
   settings.setValue("FgColor", desktopFgColor_.name());
   settings.setValue("ShadowColor", desktopShadowColor_.name());
diff --git a/pcmanfm/settings.h b/pcmanfm/settings.h
index 971ba8c..0fda2c5 100644
--- a/pcmanfm/settings.h
+++ b/pcmanfm/settings.h
@@ -235,6 +235,30 @@ class Settings : public QObject {
     wallpaper_ = wallpaper;
   }
 
+  QString wallpaperDir() const {
+    return wallpaperDir_;
+  }
+
+  void setWallpaperDir(QString dir) {
+    wallpaperDir_ = dir;
+  }
+
+  int slideShowInterval() const {
+    return slideShowInterval_;
+  }
+
+  void setSlideShowInterval(int interval) {
+    slideShowInterval_ = interval;
+  }
+
+  bool wallpaperRandomize() const {
+    return wallpaperRandomize_;
+  }
+
+  void setWallpaperRandomize(bool randomize) {
+    wallpaperRandomize_ = randomize;
+  }
+
   const QColor& desktopBgColor() const {
     return desktopBgColor_;
   }
@@ -766,6 +790,9 @@ class Settings : public QObject {
 
   int wallpaperMode_;
   QString wallpaper_;
+  QString wallpaperDir_;
+  int slideShowInterval_;
+  bool wallpaperRandomize_;
   QColor desktopBgColor_;
   QColor desktopFgColor_;
   QColor desktopShadowColor_;
